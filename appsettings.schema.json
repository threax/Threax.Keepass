{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "JwtAuth": {
      "$ref": "#/definitions/JwtAuth"
    },
    "AppConfig": {
      "$ref": "#/definitions/AppConfig"
    },
    "ClientConfig": {
      "$ref": "#/definitions/ClientConfig"
    },
    "Cors": {
      "$ref": "#/definitions/Cors"
    },
    "CertManager": {
      "$ref": "#/definitions/CertManager"
    },
    "IdServerClient": {
      "$ref": "#/definitions/IdServerClient"
    },
    "SharedClientCredentials": {
      "$ref": "#/definitions/SharedClientCredentials"
    },
    "Logging": {
      "type": [
        "null",
        "object"
      ]
    }
  },
  "definitions": {
    "JwtAuth": {
      "title": "IdServerAuthAppOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Authority": {
          "type": [
            "null",
            "string"
          ],
          "description": "The authority to use. Should be the url of the id server."
        },
        "ClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client id to use."
        },
        "Scope": {
          "type": [
            "null",
            "string"
          ],
          "description": "The primary scope for this app."
        },
        "DisplayName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The display name for this application, will be used for the id server metadata."
        },
        "AdditionalScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any additional scopes that this app should request for user tokens. This will allow\nthose user tokens to be flowed to those additional apps.",
          "items": {
            "type": "string"
          }
        },
        "ClientCredentialsScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any scopes that will be used in the client credentials version of the client metadata.\nThe client credentials are how this applicaiton can log into other services to get their\ndata. Those services should be listed here so they are included in the application's jwt\nthat id server creates. This is used when the applicaiton needs to login to a service directly\nand cannot just send the user's token along.",
          "items": {
            "type": "string"
          }
        },
        "ClientSecret": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client secret for this app. This can be null to have no secret. It defaults to\n\"notyetdefined\". Ideally this should be set to something."
        }
      }
    },
    "AppConfig": {
      "title": "AppConfig",
      "type": "object",
      "description": "The primary configuration for the app.",
      "additionalProperties": false,
      "properties": {
        "BaseUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base url of the application, by default automatically discovered."
        },
        "ConnectionString": {
          "type": [
            "null",
            "string"
          ],
          "description": "The connection string for the app's primary database."
        },
        "DetailedErrors": {
          "type": "boolean",
          "description": "True to turn on detailed error messages."
        },
        "PathBase": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base path the app lives on. Used for cookie paths and to enforce the url spelling.\nCan be null to live on the root path."
        },
        "AllowApiExplorer": {
          "type": "boolean",
          "description": "Should the api explorer be accessible, false by default. The api explorer is pure client side\nand will not expose methods the user cannot access on the service, so if I hit the explorer page\nlogged in vs logged out it will behave differently. That said it is probably best to leave this\noff in production."
        },
        "UseAssetBundles": {
          "type": "boolean",
          "description": "Set this to true to use asset bundles instead of individual client side files."
        },
        "EnableValueProviders": {
          "type": "boolean",
          "description": "Set this to false to disable value provider resolution. This should be true for produciton or your value providers\nwon't work, but you can set it to false in tools mode, which will keep the value providers from resolving when\ndoing stuff like regenerating clients. The default is true."
        }
      }
    },
    "ClientConfig": {
      "title": "ClientConfig",
      "type": "object",
      "description": "Client side configuration, copied onto pages returned to client, so don't include secrets.",
      "additionalProperties": false,
      "properties": {
        "ServiceUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The url of the app's service, defaults to ~/api. You can\nspecify an absolute url here if you want."
        }
      }
    },
    "Cors": {
      "title": "CorsManagerOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "UnlimitedAccess": {
          "type": "boolean"
        },
        "AllowedOrigins": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CertManager": {
      "title": "CertManagerOptions",
      "type": "object",
      "description": "Options for the system certficiate manager.",
      "additionalProperties": false,
      "properties": {
        "LoadCerts": {
          "type": "boolean",
          "description": "Set this to true (default) to load the certificates using Process.Start with FileName."
        },
        "FileName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The file name of the process to load to update certificates."
        }
      }
    },
    "IdServerClient": {
      "title": "ClientOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ServiceUrl": {
          "type": [
            "null",
            "string"
          ]
        },
        "ClientCredentials": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/IdServerClient/definitions/ClientCredentailsAccessTokenFactoryOptions"
            }
          ]
        }
      },
      "definitions": {
        "ClientCredentailsAccessTokenFactoryOptions": {
          "type": "object",
          "description": "Options for the ClientCredentialsAccessTokenFactory",
          "additionalProperties": false,
          "properties": {
            "IdServerHost": {
              "type": [
                "null",
                "string"
              ],
              "description": "The host for the identity server providing tokens."
            },
            "ClientId": {
              "type": [
                "null",
                "string"
              ],
              "description": "The client id to login with."
            },
            "ClientSecret": {
              "type": [
                "null",
                "string"
              ],
              "description": "The secret for the client id."
            },
            "Scope": {
              "type": [
                "null",
                "string"
              ],
              "description": "The scope that will be accessed."
            },
            "ExpirationTimeFraction": {
              "type": "number",
              "description": "This represents the fraction of the total lifetime of the access token to keep using it until\nit should be refreshed. It should be between 0 and 1, the default is 0.8 (use token for 80% of the total time, then refresh)",
              "format": "double"
            }
          }
        }
      }
    },
    "SharedClientCredentials": {
      "title": "SharedClientCredentials",
      "type": "object",
      "description": "Client credentials settings that can be shared.",
      "additionalProperties": false,
      "properties": {
        "IdServerHost": {
          "type": [
            "null",
            "string"
          ],
          "description": "The host for the identity server providing tokens."
        },
        "ClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client id to login with."
        },
        "ClientSecret": {
          "type": [
            "null",
            "string"
          ],
          "description": "The secret for the client id."
        }
      }
    }
  }
}